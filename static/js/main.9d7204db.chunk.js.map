{"version":3,"sources":["Components/Form/Form.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["Form","state","name","number","handelChange","e","currentTarget","value","setState","reset","handleSubmit","preventDefault","newContact","id","shortid","generate","props","onSubmit","this","type","pattern","title","required","onChange","Component","ContactList","options","searchValue","filter","el","toLowerCase","includes","map","Filter","label","getSearchName","placeholder","defaultProps","App","contacts","addNewContact","forEach","splice","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,OAAQ,IAHZ,EAMEC,aAAe,SAACC,GACd,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,KAR5B,EAWEE,MAAQ,WACN,EAAKD,SAAS,CACZN,KAAM,GACNC,OAAQ,MAdd,EAkBEO,aAAe,SAACL,GACdA,EAAEM,iBAEF,IAAMC,EAAa,CACjBC,GAAIC,IAAQC,WACZb,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,QAGrB,EAAKa,MAAMC,SAASL,GACpB,EAAKH,SA5BT,4CA+BE,WACE,MAAyBS,KAAKjB,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,uBAAMc,SAAUC,KAAKR,aAArB,UACE,qCACA,uBACES,KAAK,OACLjB,KAAK,OACLkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUL,KAAKd,aACfG,MAAOL,IAET,uCACA,uBACEiB,KAAK,MACLjB,KAAK,SACLkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUL,KAAKd,aACfG,MAAOJ,IAET,wDAxDR,GAA0BqB,aCAbC,EAAc,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACrC,OACE,6BACGD,EACEE,QAAO,SAACC,GACP,OAAOA,EAAG3B,KAAK4B,cAAcC,SAASJ,EAAYG,kBAEnDE,KAAI,YAA2B,IAAxB9B,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQU,EAAS,EAATA,GACpB,OACE,+BACGX,EADH,KACWC,IADFU,SCTRoB,EAAS,SAAC,GAAoC,IAAlCd,EAAiC,EAAjCA,KAAMe,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACpC,OAAO,uBAAOhB,KAAMA,EAAMI,SAAUY,EAAeC,YAAaF,KAGlED,EAAOI,aAAe,CACpBlB,KAAM,Q,IC0COmB,E,4MA3CbrC,MAAQ,CACNsC,SAAU,CACR,CAAE1B,GAAI,OAAQX,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEU,GAAI,OAAQX,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEU,GAAI,OAAQX,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEU,GAAI,OAAQX,KAAM,iBAAkBC,OAAQ,cAEhDyB,OAAQ,I,EAGVY,cAAgB,SAAC5B,GACf,EAAKJ,UAAS,gBAAG+B,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAE3B,GAAH,mBAAkB2B,QAG5B,EAAKtC,MAAMsC,SAASE,SAAQ,SAACZ,GACvBA,EAAG3B,OAASU,EAAWV,OACzB,EAAKD,MAAMsC,SAASG,OAAO,EAAG,GAC9BC,MAAM,Y,EAKZR,cAAgB,SAAC9B,GACf,EAAKG,SAAS,CAAEoB,OAAQvB,EAAEC,cAAcC,S,4CAG1C,WACE,MAA6BW,KAAKjB,MAA1BsC,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,OAElB,OACE,gCACE,2CACA,cAAC,EAAD,CAAMX,SAAUC,KAAKsB,gBACrB,0CACA,uDACA,cAAC,EAAD,CAAQL,cAAejB,KAAKiB,cAAeD,MAAM,uBACjD,cAAC,EAAD,CAAaR,QAASa,EAAUZ,YAAaC,W,GAtCnCJ,aCDlBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9d7204db.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nexport class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handelChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newContact = {\n      id: shortid.generate(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(newContact);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <p>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={this.handelChange}\n          value={name}\n        />\n        <p>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={this.handelChange}\n          value={number}\n        />\n        <button>Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const ContactList = ({ options, searchValue }) => {\n  return (\n    <ul>\n      {options\n        .filter((el) => {\n          return el.name.toLowerCase().includes(searchValue.toLowerCase());\n        })\n        .map(({ name, number, id }) => {\n          return (\n            <li key={id}>\n              {name}: {number}\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object),\n  searchValue: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Filter = ({ type, label, getSearchName }) => {\n  return <input type={type} onChange={getSearchName} placeholder={label} />;\n};\n\nFilter.defaultProps = {\n  type: \"text\",\n};\n\nFilter.propTypes = {\n  label: PropTypes.string,\n  getSearchName: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Form } from \"./Components/Form/Form\";\nimport { ContactList } from \"./Components/ContactList/ContactList\";\nimport { Filter } from \"./Components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addNewContact = (newContact) => {\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n\n    this.state.contacts.forEach((el) => {\n      if (el.name === newContact.name) {\n        this.state.contacts.splice(0, 1);\n        alert(\"fff\");\n      }\n    });\n  };\n\n  getSearchName = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Form onSubmit={this.addNewContact} />\n        <h3>Contacts</h3>\n        <h3>Find contacts by name</h3>\n        <Filter getSearchName={this.getSearchName} label=\"Enter contact name\" />\n        <ContactList options={contacts} searchValue={filter} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}